name: CI

on: [push, pull_request]

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain: [nightly]
        targets: [x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, clippy, rustfmt
        targets: ${{ matrix.targets }}
    - name: Setup ArceOS
      run: ./scripts/get_deps.sh
    - name: Check rust version
      run: rustc --version --verbose
    - name: Check code format
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: cargo fmt --all -- --check
    - name: Clippy
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy TARGET=${{ matrix.targets }}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, riscv64, aarch64]
        rust-toolchain: [nightly]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, llvm-tools
        targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat
    - uses: Swatinem/rust-cache@v2
    - run: cargo install cargo-binutils
    - run: ./scripts/get_deps.sh
    - name: Build for ${{ matrix.arch }}
      run: make ARCH=${{ matrix.arch }}

  test-musl:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, riscv64, aarch64]
        rust-toolchain: [nightly]
    env:
      qemu-version: 8.2.0
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, llvm-tools
    - uses: Swatinem/rust-cache@v2
    - run: cargo install cargo-binutils
    - run: ./scripts/get_deps.sh
    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: ${{ matrix.arch }}
    - uses: ./.github/workflows/actions/setup-qemu
      with:
        qemu-version: ${{ env.qemu-version }}
    - name: Build rustup target
      if: ${{ matrix.arch != 'riscv64' }}
      run: rustup target add ${{ matrix.arch }}-unknown-linux-musl
    - name: Run tests for musl applications
      run: make test ARCH=${{ matrix.arch }}